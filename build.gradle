plugins {
	id 'java'
	id 'org.springframework.boot' version "$springBootVersion"
	id 'io.spring.dependency-management' version "$springDependencyManagementVersion"
}

group = 'nsu.ccfit.ru.upprpo'
version = "$backVersion"

java {
	sourceCompatibility = "$javaVersion"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	/* Jpa */
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'org.postgresql:postgresql'

	/* Web */
	implementation 'org.springframework.boot:spring-boot-starter-web'

	/* Validation */
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	/* Lombok */
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	/* Documentation */
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$springDocVersion"

	/* Jackson */
	implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"

	/* SPARQL */
	implementation 'com.bordercloud:SPARQL-JAVA:1.1.1'

	/* Tests */
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	/* JUnit5 */
	testImplementation "org.junit.jupiter:junit-jupiter-api:$jUnitVersion"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jUnitVersion"

	/* JTS core */
	implementation "org.locationtech.jts:jts-core:$jtsVersion"
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

